{"version":3,"file":"static/js/415.a9a08abb.chunk.js","mappings":"4SAEMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,sGACVD,EAAAA,GAAAA,IAAA,sCAAyCD,IAD/B,uBACzBG,EADyB,EACzBA,KADyB,kBAE1BA,EAAKC,SAFqB,2CAAH,qDAKnBC,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,GAAAA,IAAA,iBACXK,EADW,oBACGN,EADH,oBADK,cACtBO,EADsB,yBAIrBA,EAASJ,MAJY,2CAAH,sDAOdK,EAAS,mCAAG,WAAMF,GAAN,uFACAL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,oBADA,cACjBO,EADiB,yBAIhBA,EAASJ,KAAKM,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMJ,GAAN,uFACHL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,2BADG,cACpBO,EADoB,yBAInBA,EAASJ,KAAKC,SAJK,2CAAH,sDAOZO,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAAA,GAAAA,IAAA,gCACID,EADJ,iCACoCY,EADpC,gCADQ,cACzBL,EADyB,yBAIxBA,EAASJ,KAAKC,SAJU,2CAAH,qD,gGC5BjBS,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wC,SCCVE,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,MAAP,OACV,yBACE,SAACR,EAAD,CAAYS,GAAE,kBAAahB,GAAMiB,MAAOL,EAAxC,SACGG,KAFIf,EADC,KASjB,C,6ECAD,UAda,WACX,OAA4BkB,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KAKA,OAHAC,EAAAA,EAAAA,YAAU,YACRxB,EAAAA,EAAAA,MAAsByB,KAAKF,EAC5B,GAAE,KAED,6BACE,6CACA,SAAC,IAAD,CAAYR,OAAQA,MAGzB,C","sources":["api/tmdb.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '21a38995d1a0d82c48e261b573f88f7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  color: blue;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { StyledLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <StyledLink to={`/movies/${id}`} state={location}>\n            {title}\n          </StyledLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","import { fetchTrendingMovies } from 'api/tmdb';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(setMovies);\n  }, []);\n  return (\n    <main>\n      <h1>Trending movies</h1>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["API_KEY","axios","fetchTrendingMovies","data","results","fetchMovieById","id","response","fetchCast","cast","fetchReviews","fetchSearchMovies","query","StyledLink","styled","Link","MoviesList","movies","location","useLocation","map","title","to","state","useState","setMovies","useEffect","then"],"sourceRoot":""}