{"version":3,"file":"static/js/741.1f166e69.chunk.js","mappings":"4SAEMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,sGACVD,EAAAA,GAAAA,IAAA,sCAAyCD,IAD/B,uBACzBG,EADyB,EACzBA,KADyB,kBAE1BA,EAAKC,SAFqB,2CAAH,qDAKnBC,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,GAAAA,IAAA,iBACXK,EADW,oBACGN,EADH,oBADK,cACtBO,EADsB,yBAIrBA,EAASJ,MAJY,2CAAH,sDAOdK,EAAS,mCAAG,WAAMF,GAAN,uFACAL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,oBADA,cACjBO,EADiB,yBAIhBA,EAASJ,KAAKM,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMJ,GAAN,uFACHL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,2BADG,cACpBO,EADoB,yBAInBA,EAASJ,KAAKC,SAJK,2CAAH,sDAOZO,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAAA,GAAAA,IAAA,gCACID,EADJ,iCACoCY,EADpC,gCADQ,cACzBL,EADyB,yBAIxBA,EAASJ,KAAKC,SAJU,2CAAH,qD,mHC3BjBS,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACE,2BACGA,EAAMC,eACL,gBAAKC,IAAG,UANC,mCAMD,OAAgBF,EAAMC,cAAgBE,IAAKH,EAAMI,QAE3D,uBAAIJ,EAAMI,QACV,uCAAeJ,EAAMK,eAG1B,ECTKC,EACK,UADLA,EAEM,WAFNA,EAGM,WAuCZ,EApCa,WACX,OAA4BC,EAAAA,EAAAA,UAASD,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBH,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaiB,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,GAAUgB,GAASI,MAAK,SAAAC,GACtBH,EAAQG,GACc,IAAlBA,EAAOC,OAIXP,EAAUH,GAHRG,EAAUH,EAIb,GACF,GAAE,CAACI,IAEAF,IAAWF,GACN,sCAGLE,IAAWF,GAEX,wBACGX,EAAKsB,KAAI,SAAAC,GAAM,OACd,yBACE,SAACnB,EAAD,CAAWC,MAAOkB,KADXA,EAAO1B,GADF,MASlBgB,IAAWF,GACN,6CADT,CAGD,C","sources":["api/tmdb.js","components/ActorCard/ActorCard.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '21a38995d1a0d82c48e261b573f88f7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n","import PropTypes from 'prop-types';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w185';\n\nexport const ActorCard = ({ actor }) => {\n  return (\n    <div>\n      {actor.profile_path && (\n        <img src={`${BASE_URL}${actor.profile_path}`} alt={actor.name} />\n      )}\n      <p>{actor.name}</p>\n      <p>Character: {actor.character}</p>\n    </div>\n  );\n};\n\nActorCard.propTypes = {\n  actor: PropTypes.shape({\n    profile_path: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    character: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchCast } from 'api/tmdb';\nimport { useParams } from 'react-router-dom';\nimport { ActorCard } from 'components/ActorCard/ActorCard';\n\nconst Status = {\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Cast = () => {\n  const [status, setStatus] = useState(Status.PENDING);\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchCast(movieId).then(movies => {\n      setCast(movies);\n      if (movies.length === 0) {\n        setStatus(Status.REJECTED);\n        return;\n      }\n      setStatus(Status.RESOLVED);\n    });\n  }, [movieId]);\n\n  if (status === Status.PENDING) {\n    return <p>loading...</p>;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <ul>\n        {cast.map(person => (\n          <li key={person.id}>\n            <ActorCard actor={person} />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  if (status === Status.REJECTED) {\n    return <p>No cast yet.</p>;\n  }\n};\nexport default Cast;\n"],"names":["API_KEY","axios","fetchTrendingMovies","data","results","fetchMovieById","id","response","fetchCast","cast","fetchReviews","fetchSearchMovies","query","ActorCard","actor","profile_path","src","alt","name","character","Status","useState","status","setStatus","movieId","useParams","setCast","useEffect","then","movies","length","map","person"],"sourceRoot":""}