{"version":3,"file":"static/js/815.feaf0069.chunk.js","mappings":"4SAEMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,sGACVD,EAAAA,GAAAA,IAAA,sCAAyCD,IAD/B,uBACzBG,EADyB,EACzBA,KADyB,kBAE1BA,EAAKC,SAFqB,2CAAH,qDAKnBC,EAAc,mCAAG,WAAMC,GAAN,uFACLL,EAAAA,GAAAA,IAAA,iBACXK,EADW,oBACGN,EADH,oBADK,cACtBO,EADsB,yBAIrBA,EAASJ,MAJY,2CAAH,sDAOdK,EAAS,mCAAG,WAAMF,GAAN,uFACAL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,oBADA,cACjBO,EADiB,yBAIhBA,EAASJ,KAAKM,MAJE,2CAAH,sDAOTC,EAAY,mCAAG,WAAMJ,GAAN,uFACHL,EAAAA,GAAAA,IAAA,iBACXK,EADW,4BACWN,EADX,2BADG,cACpBO,EADoB,yBAInBA,EAASJ,KAAKC,SAJK,2CAAH,sDAOZO,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,EAAAA,GAAAA,IAAA,gCACID,EADJ,iCACoCY,EADpC,gCADQ,cACzBL,EADyB,yBAIxBA,EAASJ,KAAKC,SAJU,2CAAH,qD,qHC7BjBS,EAAaC,EAAAA,GAAAA,IAAH,+GAOVC,EAAcD,EAAAA,GAAAA,IAAH,wCAIXE,EAAkBF,EAAAA,GAAAA,IAAH,2C,SCPfG,EAAY,SAAC,GAEnB,IAAD,IADJC,MAASC,EACL,EADKA,YAAaC,EAClB,EADkBA,MAAOC,EACzB,EADyBA,aAAcC,EACvC,EADuCA,aAAcC,EACrD,EADqDA,SAAUC,EAC/D,EAD+DA,OAEnE,OACE,UAACX,EAAD,YACE,SAACG,EAAD,WACE,SAACD,EAAD,CAAaU,IAAG,UARP,kCAQO,YAAiBN,GAAeO,IAAKN,OAGvD,4BACE,0BACGA,EADH,KACY,IAAIO,KAAKN,GAAcO,cADnC,QAGA,yCAAgC,GAAfN,GAAmBO,QAAQ,GAA5C,QACA,sCACA,uBAAIN,KACJ,oCACA,wBACGC,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,KAAMzB,EAAT,EAASA,GAAT,OACV,wBAAcyB,GAALzB,EADC,WAOrB,E,0BC5BY0B,EAAalB,EAAAA,GAAAA,IAAH,2DAIVmB,GAAanB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,wCCNVqB,EAAY,WACvB,OACE,SAACH,EAAD,WACE,2BACE,yBACE,SAACC,EAAD,CAAYG,GAAG,OAAf,qBAEF,yBACE,SAACH,EAAD,CAAYG,GAAG,UAAf,2BAKT,ECoBD,EA3BqB,WACnB,OAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOnB,EAAP,KAAcoB,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAClBC,GAAWC,EAAAA,EAAAA,MAIjB,OAHAC,EAAAA,EAAAA,YAAU,YACRzC,EAAAA,EAAAA,IAAekC,GAASQ,KAAKT,EAC9B,GAAE,CAACC,KAEF,6BACE,mBAAQS,QAAS,kBAAMJ,EAASH,EAASQ,QAAQC,OAAS,IAAzC,EAAjB,qBAGChC,IACC,iCACE,SAACD,EAAD,CAAWC,MAAOA,KAClB,mDACA,SAACiB,EAAD,QAGJ,SAAC,EAAAgB,SAAD,CAAUC,UAAU,sCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/tmdb.js","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '21a38995d1a0d82c48e261b573f88f7b';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const fetchMovieById = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const StyledCard = styled.div`\n  display: flex;\n  padding: 10px 0;\n  border-bottom: 1px solid black;\n  gap: 16px;\n`;\n\nexport const StyledImage = styled.img`\n  width: 100%;\n`;\n\nexport const StyledContainer = styled.div`\n  flex-shrink: 0;\n`;\n","import PropTypes from 'prop-types';\n\nimport { StyledCard, StyledContainer, StyledImage } from './MovieCard.styled';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const MovieCard = ({\n  movie: { poster_path, title, release_date, vote_average, overview, genres },\n}) => {\n  return (\n    <StyledCard>\n      <StyledContainer>\n        <StyledImage src={`${BASE_URL}/${poster_path}`} alt={title} />\n      </StyledContainer>\n\n      <div>\n        <h1>\n          {title} ({new Date(release_date).getFullYear()})\n        </h1>\n        <p>User score: {(vote_average * 10).toFixed(0)}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        <ul>\n          {genres.map(({ name, id }) => (\n            <li key={id}>{name}</li>\n          ))}\n        </ul>\n      </div>\n    </StyledCard>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.exact({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledList = styled.div`\n  border-bottom: 1px solid black;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: blue;\n`;\n","import { StyledList, StyledLink } from './MovieInfo.styled';\nexport const MovieInfo = () => {\n  return (\n    <StyledList>\n      <ul>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </ul>\n    </StyledList>\n  );\n};\n","import { useLocation, useNavigate, useParams, Outlet } from 'react-router-dom';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { useState, useEffect, Suspense } from 'react';\nimport { fetchMovieById } from 'api/tmdb';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { useRef } from 'react';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useRef(useLocation());\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchMovieById(movieId).then(setMovie);\n  }, [movieId]);\n  return (\n    <main>\n      <button onClick={() => navigate(location.current.state || '/')}>\n        Go back\n      </button>\n      {movie && (\n        <>\n          <MovieCard movie={movie} />\n          <p>Additional information</p>\n          <MovieInfo />\n        </>\n      )}\n      <Suspense fallback={<p>loading...</p>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchTrendingMovies","data","results","fetchMovieById","id","response","fetchCast","cast","fetchReviews","fetchSearchMovies","query","StyledCard","styled","StyledImage","StyledContainer","MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","src","alt","Date","getFullYear","toFixed","map","name","StyledList","StyledLink","Link","MovieInfo","to","useState","setMovie","movieId","useParams","location","useRef","useLocation","navigate","useNavigate","useEffect","then","onClick","current","state","Suspense","fallback"],"sourceRoot":""}